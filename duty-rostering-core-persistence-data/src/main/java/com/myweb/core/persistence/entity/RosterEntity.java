package com.myweb.core.persistence.entity;

import java.util.Date;

// default package
// Generated 25-Oct-2017 23:46:53 by Hibernate Tools 5.2.5.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RosterEntity generated by hbm2java
 */
@Entity
@Table(name = "roster", catalog = "dutyrostering")
public class RosterEntity{

	private RosterIdEntity rosterIdEntity;
	private DateEntity dateEntity;
	private EmployeeEntity employeeEntity;
	private ShiftTypeEntity shiftTypeEntity;
	private String noteMessage;
	private Date timeExpired;
	private boolean isActive;

	public RosterEntity() {
	}

	public RosterEntity(RosterIdEntity rosterIdEntity, DateEntity dateEntity, EmployeeEntity employeeEntity, ShiftTypeEntity shiftTypeEntity, Date timeExpired,
			boolean isActive) {
		this.rosterIdEntity = rosterIdEntity;
		this.dateEntity = dateEntity;
		this.employeeEntity = employeeEntity;
		this.shiftTypeEntity = shiftTypeEntity;
		this.timeExpired = timeExpired;
		this.isActive = isActive;
	}

	public RosterEntity(RosterIdEntity rosterIdEntity, DateEntity dateEntity, EmployeeEntity employeeEntity, ShiftTypeEntity shiftTypeEntity, String noteMessage,
			Date timeExpired, boolean isActive) {
		this.rosterIdEntity = rosterIdEntity;
		this.dateEntity = dateEntity;
		this.employeeEntity = employeeEntity;
		this.shiftTypeEntity = shiftTypeEntity;
		this.noteMessage = noteMessage;
		this.timeExpired = timeExpired;
		this.isActive = isActive;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "empId", column = @Column(name = "EMP_ID", nullable = false)),
			@AttributeOverride(name = "dateId", column = @Column(name = "DATE_ID", nullable = false)),
			@AttributeOverride(name = "shift", column = @Column(name = "SHIFT", nullable = false)) })
	public RosterIdEntity getRosterIdEntity() {
		return this.rosterIdEntity;
	}

	public void setRosterIdEntity(RosterIdEntity rosterIdEntity) {
		this.rosterIdEntity = rosterIdEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DATE_ID", nullable = false, insertable = false, updatable = false)
	public DateEntity getDateEntity() {
		return this.dateEntity;
	}

	public void setDateEntity(DateEntity dateEntity) {
		this.dateEntity = dateEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMP_ID", nullable = false, insertable = false, updatable = false)
	public EmployeeEntity getEmployeeEntity() {
		return this.employeeEntity;
	}

	public void setEmployeeEntity(EmployeeEntity employeeEntity) {
		this.employeeEntity = employeeEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHIFT_TYPE_ID", nullable = false)
	public ShiftTypeEntity getShiftTypeEntity() {
		return this.shiftTypeEntity;
	}

	public void setShiftTypeEntity(ShiftTypeEntity shiftTypeEntity) {
		this.shiftTypeEntity = shiftTypeEntity;
	}

	@Column(name = "NOTE_MESSAGE")
	public String getNoteMessage() {
		return this.noteMessage;
	}

	public void setNoteMessage(String noteMessage) {
		this.noteMessage = noteMessage;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIME_EXPIRED", nullable = false, length = 19)
	public java.util.Date getTimeExpired() {
		return this.timeExpired;
	}

	public void setTimeExpired(Date timeExpired) {
		this.timeExpired = timeExpired;
	}

	@Column(name = "IS_ACTIVE", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

}
