package com.myweb.core.persistence.enity;

// default package
// Generated 25-Oct-2017 23:46:53 by Hibernate Tools 5.2.5.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Roster generated by hbm2java
 */
@Entity
@Table(name = "roster", catalog = "dutyrostering")
public class Roster{

	private RosterId id;
	private Date date;
	private Employee employee;
	private ShiftType shiftType;
	private String noteMessage;
	private java.util.Date timeExpired;
	private boolean isActive;

	public Roster() {
	}

	public Roster(RosterId id, Date date, Employee employee, ShiftType shiftType, java.util.Date timeExpired,
			boolean isActive) {
		this.id = id;
		this.date = date;
		this.employee = employee;
		this.shiftType = shiftType;
		this.timeExpired = timeExpired;
		this.isActive = isActive;
	}

	public Roster(RosterId id, Date date, Employee employee, ShiftType shiftType, String noteMessage,
			java.util.Date timeExpired, boolean isActive) {
		this.id = id;
		this.date = date;
		this.employee = employee;
		this.shiftType = shiftType;
		this.noteMessage = noteMessage;
		this.timeExpired = timeExpired;
		this.isActive = isActive;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "empId", column = @Column(name = "EMP_ID", nullable = false)),
			@AttributeOverride(name = "dateId", column = @Column(name = "DATE_ID", nullable = false)),
			@AttributeOverride(name = "shift", column = @Column(name = "SHIFT", nullable = false)) })
	public RosterId getId() {
		return this.id;
	}

	public void setId(RosterId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DATE_ID", nullable = false, insertable = false, updatable = false)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMP_ID", nullable = false, insertable = false, updatable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SHIFT_TYPE_ID", nullable = false)
	public ShiftType getShiftType() {
		return this.shiftType;
	}

	public void setShiftType(ShiftType shiftType) {
		this.shiftType = shiftType;
	}

	@Column(name = "NOTE_MESSAGE")
	public String getNoteMessage() {
		return this.noteMessage;
	}

	public void setNoteMessage(String noteMessage) {
		this.noteMessage = noteMessage;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TIME_EXPIRED", nullable = false, length = 19)
	public java.util.Date getTimeExpired() {
		return this.timeExpired;
	}

	public void setTimeExpired(java.util.Date timeExpired) {
		this.timeExpired = timeExpired;
	}

	@Column(name = "IS_ACTIVE", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

}
